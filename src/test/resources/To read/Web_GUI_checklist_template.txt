	What is GUI?
Testing is the process of searching for software errors.
Testing classified as functional; non-functional; and User Interfaces (UI).
There are two types of UI for a computer application:
Command Line Interface (CLI) and Graphical User Interface (GUI).
In GUI, you interact with the computer using images (in CLI - text).

Functional testing is verifying "application's behavioral meets to specification".
GUI Testing is a validation of the GUI elements.
We do not test GUI controls, unless they are custom (Radio Buttons; Check Boxes; Command Buttons; and list boxes).
Controls come ready to use from vendors.
Read either the "use case"; Business Requirements Document (BRD);  Product Requirement Document (PRD); or
Functional Specification (FS) - what is available.
The web application is verified for conformity with user requirements (functional testing).

To plan your GUI testing, you need a checklist and test order.
The result of functional testing should also be considered.

		Web GUI Checklist template:

    Before Run Web Site
GUI can be detailed by user requirements:
    - Title names;
    - which fields are required;
    - types of entry fields;
    - Error Messages texts ...

    Run Web Site
Clickable Logo must be on each page. 
Unique different Title must be of each page.

	For each page
Horizontal scrolling must be avoided.
Invalid hyperlinks should be fixed.
The link text must be consistent with the title or headings on the destination.
Suggest "Pointing-and-clicking," rather than "mouse over" when selecting menu items.
Check the positioning of GUI elements for different screen resolution.
The images must be properly aligned.
Check all text on page for spelling/tense and grammar. 
Use TAB to move focus around the page. Use SHIFT+TAB to move focus backwards. 
Tab order should be left to right, and up to down within a section on the page. 
All controls should get focus. 
Tabbing to an entry field with text in it should highlight the entire text in the field. 
If a field is disabled (grey) then it should not get focus.

    Required Fields
Each required field labeled by asterisks or “required”
Error message provided if required field has no input

    Edit Boxes
- Capacity Testing (5 test cases: min; max; middle; min - 1; max + 1)
- Valid/Invalid Input (3+ test cases: empty; valid; invalid)
- ZIP CODE (digits only, 5-digits only)
- Phone Number: No letters, No special Characters (possible exceptions: dash,  round brackets, dot, space).
	10 digits (11 if begins with one). Might have 3 edit boxes per number.
- EMail (accepts letters, digits, some special characters - @ . - _ )
- are wild cards accepted ([* - any string];[? - any character] ...)?
- DATE field needs validation for month (01-12), day (01-31), year (1900 - current)
- TIME needs validation for minutes (00-59), hours (00-23), seconds (00-59)
- Data Retained in Database - test for each field

    Emails retaining data (if applicable)
Correct address
Correct data for each field

    Values in lists
One value represents the entire list - try just one
To be consistent
To be complete (compare with similar services).
Make sure  "Other"/"None"/"Less than"/"Over" item is present when applicable
Negative test case - assign nothing - get the error message

    Default Button Assignment
- make sure there is one
- make sure the choice of default button is not conflicting with anything
- the choice should be consistent from form to form in the application

    Controls
- identical controls in different forms are consistent (look, name, behavior)
- Checkboxes/radiobuttons - have reasonable initial values

    Data Input Rules
Use Lists whenever possible versus text boxes
Calculate rather than ask for input (for example: calculate county by ZIP)
Functionality/Validation

	Error Messages
Error Messages must display correctly. 
The color of the font and warning messages must be aesthetically pleasing.

    Bag examples:

"Disabled access the homepage".
"Page has not Logo or 'Home' link ".
"All site pages have the same Titles".
"Page layout has horizontal scroll bar".
"Link does not lead to valid resources and get 404 error code ('Page Not Found' message)".
"Link text is different from destination header". 
"Page title is not consistent with link that it invoked".
"Unreachable code" or "stale element" when test automated.
"Misspelled word 'Slate' instead of expected 'State' in the banner".
"Incorrect TAB order right to left instead of expected left to right."
"Enabled controls when cannot use them".
"The cursor does not automatically set in the first data entry field when page opened".
"Table items are not aligned right for ease of comparison".
"Menu item has an ellipsis but the command does not require additional information ".
"There is no 'Other' item in the list box for completeness".
"Text and background have the same or non-contrast color".
"Icon has not the label or prompts".
"User can create account using non-existing email".
"Text box is covered by the virtual keyboard when the tablet is in a horizontal state".
"App crushed after the 'Arrow back' tap".
"Search results are not sorted".
"Incorrect format (date | US address) was used".
"All labels must end with a ':' (colon) character".

    See also:
https://www.lasth.com/onlinehome/
https://guidelines.usability.gov/
https://www.lasth.com/wp-content/uploads/2016/09/WindowsUserExperience-Windows-XP_2000.pdf
https://www.lasth.com/wp-content/uploads/2016/09/UXGuide-Windows-7_Vista.pdf
https://www.guru99.com/gui-testing.html
http://www.methodsandtools.com/archive/archive.php?id=37