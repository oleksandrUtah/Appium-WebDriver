@DataProvider is TestNG annotation that using to storing and preparing data set in method.
This method returns 2-dimensional array of objects (an array of array) Object[][] with data.

   package day7;
   import org.testng.annotations.DataProvider;
   import org.testng.annotations.Test;

   public class DataProvidersTests {
       @DataProvider(name = "test1")
       public Object[][] createData1() {
           return new Object[][] {
                   { "Cedric", new Integer(36) },
                   { "Anne", new Integer(37)},
                   { "Alex", new Integer(37)},
           };
       }
       @Test(dataProvider = "test1")
       public void verifyData1(String n1, Integer n2) {
           System.out.println(n1 + " " + n2);
       }
   }
Result:
    Cedric 36
    Anne 37
    Alex 37

Another example.
Use @DataProvider for login test instead of @Parameters.
Create class parametersTestsExamples.LoginDataProvider.
We can to use @DataProvider for negative tests where call the same method "testPatternNegative(...)".
@DataProvider is useful in case when test script will be the same for each @Test.
@Parameters will be better than @DataProvider for different test scripts.
We can run directly LoginDataProvider class or run testng3.xml file.

Data driven testing is also possible using an Excel file.
Apache POI is used to read, create and edit Microsoft Office file.
Create class parametersTestsExamples.LoginDataProviderExcel.
Create C:\Users\kozac\Appium-WebDriver\testData\TestData.xlsx file for  tests credentials:
            email	                password	result
            koz84075+007@gmail.com	1234567a
            koz84075+007@gmail.com	1234567a
            Koz84075+007@gmail.com	1234567a
            koz84075+007@gmail.com	1234567A
            koz84075+007@gmail.com	123a
            xxxxx	                1234567a
            unknown	                1234567a
            koz84075+007@gmail.com	unknown
Use class utility.ExcelUtils and class utility.Constant.
Add in class BaseTestParameters:
   ExcelUtils.setExcelFile(Constant.Path_TestData + Constant.File_TestData,"LoginShocase");
Run class parametersTestsExamples.LoginDataProviderExcel.


